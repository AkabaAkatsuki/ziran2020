#include <MPM/MpmParticleHandleBase.cpp>
namespace ZIRAN {
template class MpmParticleHandleBase<float, 2>;
extern template class MpmForceBase<float, 2>;
template void MpmParticleHandleBase<float, 2>::addFJMixedMpmForce<NeoHookeanIsotropic<float, 2>, QuadraticVolumePenalty<float, 2>>(NeoHookeanIsotropic<float, 2> const&, QuadraticVolumePenalty<float, 2> const&, MATERIAL_PHASE_ENUM, MATERIAL_PROPERTY_ENUM, bool);
template void MpmParticleHandleBase<float, 2>::addFJMixedMpmForce<StvkWithHenckyIsotropic<float, 2>, QuadraticVolumePenalty<float, 2>>(StvkWithHenckyIsotropic<float, 2> const&, QuadraticVolumePenalty<float, 2> const&, MATERIAL_PHASE_ENUM, MATERIAL_PROPERTY_ENUM, bool);
template void MpmParticleHandleBase<float, 2>::addFJMixedMpmForce<CorotatedElasticity<float, 2>, QuadraticVolumePenalty<float, 2>>(CorotatedElasticity<float, 2> const&, QuadraticVolumePenalty<float, 2> const&, MATERIAL_PHASE_ENUM, MATERIAL_PROPERTY_ENUM, bool);
template void MpmParticleHandleBase<float, 2>::addFJMixedMpmForce<CorotatedIsotropic<float, 2>, QuadraticVolumePenalty<float, 2>>(CorotatedIsotropic<float, 2> const&, QuadraticVolumePenalty<float, 2> const&, MATERIAL_PHASE_ENUM, MATERIAL_PROPERTY_ENUM, bool);
template void MpmParticleHandleBase<float, 2>::addFJMixedMpmForce<LinearCorotated<float, 2>, QuadraticVolumePenalty<float, 2>>(LinearCorotated<float, 2> const&, QuadraticVolumePenalty<float, 2> const&, MATERIAL_PHASE_ENUM, MATERIAL_PROPERTY_ENUM, bool);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForceWithAnisotropicPhaseField<NeoHookeanBorden<float, 2>>(const StdVector<Vector<float, 2>>, const StdVector<float>, const float&, const float&, NeoHookeanBorden<float, 2> const&, const float, const float, bool, const float);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForceWithAnisotropicPhaseField<QRAnisotropic<float, 2>>(const StdVector<Vector<float, 2>>, const StdVector<float>, const float&, const float&, QRAnisotropic<float, 2> const&, const float, const float, bool, const float);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForceWithAnisotropicPhaseField<QRStableNeoHookean<float, 2>>(const StdVector<Vector<float, 2>>, const StdVector<float>, const float&, const float&, QRStableNeoHookean<float, 2> const&, const float, const float, bool, const float);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForceWithPhaseField<NeoHookeanBorden<float, 2>>(const float&, const float&, NeoHookeanBorden<float, 2> const&, bool, const float);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<CorotatedElasticity<float, 2>>(CorotatedElasticity<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<CorotatedIsotropic<float, 2>>(CorotatedIsotropic<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<CorotatedDistortionalDilational<float, 2>>(CorotatedDistortionalDilational<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<CotangentOrthotropic<float, 2>>(CotangentOrthotropic<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<Smudge<float, 2>>(Smudge<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<QRAnisotropic<float, 2>>(QRAnisotropic<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<QRStableNeoHookean<float, 2>>(QRStableNeoHookean<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<LinearElasticity<float, 2>>(LinearElasticity<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<LinearCorotated<float, 2>>(LinearCorotated<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<NeoHookean<float, 2>>(NeoHookean<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<NeoHookeanBorden<float, 2>>(NeoHookeanBorden<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<NeoHookeanIsotropic<float, 2>>(NeoHookeanIsotropic<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<StVenantKirchhoff<float, 2>>(StVenantKirchhoff<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<StvkWithHencky<float, 2>>(StvkWithHencky<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<StvkWithHenckyDecoupled<float, 2>>(StvkWithHenckyDecoupled<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<StvkWithHenckyIsotropic<float, 2>>(StvkWithHenckyIsotropic<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<StvkWithHenckyIsotropicUnilateral<float, 2>>(StvkWithHenckyIsotropicUnilateral<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFBasedMpmForce<SurfaceTension<float, 2>>(SurfaceTension<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addFDecoupledBasedMpmForce<StvkWithHenckyDecoupled<float, 2>>(StvkWithHenckyDecoupled<float, 2> const&, float);
template void MpmParticleHandleBase<float, 2>::addFElasticNonequilibratedBasedMpmForce<StvkWithHencky<float, 2>>(StvkWithHencky<float, 2> const&, float, float);
template void MpmParticleHandleBase<float, 2>::addJBasedMpmForce<EquationOfState<float, 2>>(EquationOfState<float, 2> const&);
template void MpmParticleHandleBase<float, 2>::addPlasticity<CorotatedIsotropic<float, 2>, SnowPlasticity<float>>(CorotatedIsotropic<float, 2> const&, SnowPlasticity<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<CorotatedElasticity<float, 2>, SnowPlasticity<float>>(CorotatedElasticity<float, 2> const&, SnowPlasticity<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<LinearCorotated<float, 2>, SnowPlasticity<float>>(LinearCorotated<float, 2> const&, SnowPlasticity<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHencky<float, 2>, ModifiedCamClay<float>>(StvkWithHencky<float, 2> const&, ModifiedCamClay<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyIsotropic<float, 2>, ModifiedCamClay<float>>(StvkWithHenckyIsotropic<float, 2> const&, ModifiedCamClay<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<Smudge<float, 2>, DruckerPragerStvkHencky<float>>(Smudge<float, 2> const&, DruckerPragerStvkHencky<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<Smudge<float, 2>, SmudgePlasticity<float>>(Smudge<float, 2> const&, SmudgePlasticity<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<EquationOfState<float, 2>, UnilateralJ<float>>(EquationOfState<float, 2> const&, UnilateralJ<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<NeoHookean<float, 2>, SnowPlasticity<float>>(NeoHookean<float, 2> const&, SnowPlasticity<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<NeoHookeanBorden<float, 2>, NonAssociativeCamClay<float>>(NeoHookeanBorden<float, 2> const&, NonAssociativeCamClay<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<NeoHookeanBorden<float, 2>, NonAssociativeVonMises<float>>(NeoHookeanBorden<float, 2> const&, NonAssociativeVonMises<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<NeoHookeanBorden<float, 2>, NonAssociativeDruckerPrager<float>>(NeoHookeanBorden<float, 2> const&, NonAssociativeDruckerPrager<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHencky<float, 2>, DruckerPragerStvkHencky<float>>(StvkWithHencky<float, 2> const&, DruckerPragerStvkHencky<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHencky<float, 2>, DruckerPragerStrainSoftening<float>>(StvkWithHencky<float, 2> const&, DruckerPragerStrainSoftening<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHencky<float, 2>, VonMisesStvkHencky<float, 2>>(StvkWithHencky<float, 2> const&, VonMisesStvkHencky<float, 2> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<QRStableNeoHookean<float, 2>, VonMisesStvkHencky<float, 2>>(QRStableNeoHookean<float, 2> const&, VonMisesStvkHencky<float, 2> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHencky<float, 2>, VonMisesCapped<float>>(StvkWithHencky<float, 2> const&, VonMisesCapped<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyIsotropic<float, 2>, SmudgePlasticity<float>>(StvkWithHenckyIsotropic<float, 2> const&, SmudgePlasticity<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyDecoupled<float, 2>, DruckerPragerStvkHencky<float>>(StvkWithHenckyDecoupled<float, 2> const&, DruckerPragerStvkHencky<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyIsotropic<float, 2>, DruckerPragerStvkHencky<float>>(StvkWithHenckyIsotropic<float, 2> const&, DruckerPragerStvkHencky<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyIsotropic<float, 2>, DruckerPragerStrainSoftening<float>>(StvkWithHenckyIsotropic<float, 2> const&, DruckerPragerStrainSoftening<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyIsotropic<float, 2>, VonMisesStvkHencky<float, 2>>(StvkWithHenckyIsotropic<float, 2> const&, VonMisesStvkHencky<float, 2> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyIsotropic<float, 2>, VonMisesCapped<float>>(StvkWithHenckyIsotropic<float, 2> const&, VonMisesCapped<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyIsotropicUnilateral<float, 2>, DruckerPragerStvkHencky<float>>(StvkWithHenckyIsotropicUnilateral<float, 2> const&, DruckerPragerStvkHencky<float> const&, std::string);
template void MpmParticleHandleBase<float, 2>::addPlasticity<StvkWithHenckyDecoupled<float, 2>, VonMisesStvkHencky<float, 2>>(StvkWithHenckyDecoupled<float, 2> const&, VonMisesStvkHencky<float, 2> const&, std::string);
} // namespace ZIRAN
